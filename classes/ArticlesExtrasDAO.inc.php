<?php/** * @file ArticlesExtrasDAO.php * * Copyright (c) 2009 Richard GonzÃ¡lez Alberto * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING. * * @ingroup plugins_generic_articlesExtras * @brief Articles Extras DAO class. * */class ArticlesExtrasDAO extends DAO {	/**	 * Constructor.	 */	function ArticlesExtrasDAO() {		parent::DAO();	}		/**	 * Sets article body.	 */	function setArticleBody(&$article, $body){		if(!$this->settingExists($article->getArticleId(), "body"))			$this->insertArticleBody($article, $body);		else			$this->updateArticleBody($article, $body);	}		/**	 * Private function inserts a new article body record.	 */	function insertArticleBody(&$article, $body) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('INSERT INTO article_settings				(					article_id,					locale,					setting_name,					setting_value,					setting_type				)				VALUES 				(%s, \'%s\', \'%s\', \'%s\', \'%s\')',				$article->getArticleId(),				$primaryLocale,				"body",				$body,				"string"			)	 	);	}		/**	 * Private function updates an existing article body	 */	function updateArticleBody(&$article, $body) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('UPDATE article_settings SET 					setting_value = \'%s\' 					WHERE article_id = %s AND 					setting_name=\'body\' AND 					locale=\'%s\'', 					$body, 					$article->getArticleId(), 					$primaryLocale				)	 	);	}		/**	 * Checks if a given setting exists for an specific article	 */	function settingExists($articleId, $settingName, $locale = null){		if($locale == null) $locale = Locale::getPrimaryLocale();		$result = &$this->retrieve('SELECT setting_value FROM article_settings WHERE 									setting_name = ? AND 									article_id = ? AND 									locale = ?', 									array($settingName, $articleId, $locale)								   );		if ($result->RecordCount() != 0) {			return true;		}		else return false;	}		/**	 * Checks if a given author setting exists.	 */	function authorSettingExists($authorId, $settingName, $locale = null){		if($locale == null) $locale = Locale::getPrimaryLocale();		$result = &$this->retrieve('SELECT setting_value FROM author_settings WHERE 									setting_name = ? AND 									author_id = ? AND 									locale = ?', 									array($settingName, $authorId, $locale)								   );		if ($result->RecordCount() != 0) {			return true;		}		else return false;	}		/**	 * Returns article body.	 */	function getArticleBody($articleId) {		$primaryLocale = Locale::getPrimaryLocale();		$result = &$this->retrieve('SELECT setting_value FROM article_settings WHERE 									setting_name=\'body\' AND 									article_id = ? AND 									locale = ? ', 									array($articleId, $primaryLocale));				return $result->fields['setting_value'];	}		/**	 * Returns article images	 */	function getArticleImages($articleId) {		$primaryLocale = Locale::getPrimaryLocale();		$result = &$this->retrieve('SELECT setting_value FROM article_settings WHERE 									setting_name=\'images\' AND 									article_id = ? AND 									locale = ? ', 									array($articleId, $primaryLocale));				return $result->fields['setting_value'];	}		/**	 * Sets article images	 */	function setArticleImages(&$article, $images)	{		if(!$this->settingExists($article->getArticleId(), "images"))			$this->insertArticleImages($article, $images);		else			$this->updateArticleImages($article, $images);	}		/**	 * Private function inserts a new set of article images	 */	function insertArticleImages(&$article, $images) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('INSERT INTO article_settings				(					article_id,					locale,					setting_name,					setting_value,					setting_type				)				VALUES 				(%s, \'%s\', \'%s\', \'%s\', \'%s\')',				$article->getArticleId(),				$primaryLocale,				"images",				$images,				"string"			)	 	);	}		/**	 * Private function updates an existing set of article images	 */	function updateArticleImages(&$article, $images) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('UPDATE article_settings SET 					setting_value = \'%s\' 					WHERE article_id = %s AND 					setting_name=\'images\' AND 					locale=\'%s\'', 					$images, 					$article->getArticleId(), 					$primaryLocale				)	 	);	}		/**	 * Returns a the number of images for the given articleId	 */	function countImagesByArticleId($articleId){		$locale = Locale::getPrimaryLocale();		$result = &$this->retrieve('SELECT setting_value FROM article_settings WHERE 									setting_name = ? AND 									article_id = ? AND 									locale = ?', 									array("images", $articleId, $locale)								   );				//just for test make actual count		return $result->RecordCount();	}		/**	 * Sets article citations	 */	function setArticleCitations($articleId, $citations)	{		if(!$this->settingExists($articleId, "citations"))			$this->insertArticleCitations($articleId, $citations);		else			$this->updateArticleCitations($articleId, $citations);	}	 		/**	 * Private function insert a new set of article citations	 */	function insertArticleCitations($articleId, $citations) {		$primaryLocale = Locale::getPrimaryLocale();		$serialCitations = serialize($citations);		$this->update(			sprintf('INSERT INTO article_settings				(					article_id,					locale,					setting_name,					setting_value,					setting_type				)				VALUES 				(%s, \'%s\', \'%s\', \'%s\', \'%s\')',				$articleId,				$primaryLocale,				"citations",				$serialCitations,				"string"			)	 	);	}		/**	 * Private function updates an existing set of article citations	 */	 function updateArticleCitations($articleId, $citations) {		$primaryLocale = Locale::getPrimaryLocale();		$serialCitations = serialize($citations);		$this->update(			sprintf('UPDATE article_settings SET 					 setting_value = \'%s\' WHERE 					 article_id = %s AND 					 setting_name=\'citations\' AND 					 locale=\'%s\'', 					 $serialCitations, 					 $articleId, 					 $primaryLocale					)	 	);	}		/**	 * Returns a serialized string of citations for the given articleId	 */	function getCitationsByArticleId($articleId){		$primaryLocale = Locale::getPrimaryLocale();				$result = &$this->retrieve('SELECT setting_value FROM article_settings WHERE 									setting_name=? AND 									article_id = ? AND 									locale = ?', 									array("citations", $articleId, $primaryLocale)									);				return $result->fields['setting_value'];		}		/**	 * Returns an specific metadata from the settings table.	 */	function getMetadataByArticleId($articleId, $metadata){		$primaryLocale = Locale::getPrimaryLocale();				$result = &$this->retrieve('SELECT setting_value FROM article_settings WHERE 									setting_name=? AND 									article_id = ? AND 									locale = ?', 									array($metadata, $articleId, $primaryLocale)									);				return $result->fields['setting_value'];		}		/**	 * Sets an specific metadata setting.	 */	function setArticleMetadata($articleId, $metadata, $value)	{		if(!$this->settingExists($articleId, $metadata))			$this->insertMetadataByArticleId($articleId, $metadata, $value);		else			$this->updateMetadataByArticleId($articleId, $metadata, $value);	}			/**	 * Inserts an specific metadata for a given article.	 */	function insertMetadataByArticleId($articleId, $metadata, $value) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('INSERT INTO article_settings				(					article_id,					locale,					setting_name,					setting_value,					setting_type				)				VALUES 				(%s, \'%s\', \'%s\', \'%s\', \'%s\')',				$articleId,				$primaryLocale,				$metadata,				$value,				"string"			)	 	);	}		/**	 * updates an specific metadata on the settings table.	 */	 function updateMetadataByArticleId($articleId, $metadata, $value) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('UPDATE article_settings SET 					 setting_value = \'%s\' WHERE 					 article_id = %s AND 					 setting_name=\'%s\' AND 					 locale=\'%s\'', 					 $value, 					 $articleId, 					 $metadata,					 $primaryLocale					)	 	);	}	// /**	//  * Returns authors names by ID	//  */	// function getAuthorNamesByAuthorId($authorId){	// 	$primaryLocale = Locale::getPrimaryLocale();			// 	$result = &$this->retrieve('SELECT first_name, middle_name, last_name FROM authors WHERE 	// 								author_id = ? AND 	// 								locale = ?', 	// 								array($authorId, $primaryLocale)	// 								);			// 	return $result->fields['first_name'];	// 	return array($result->fields['first_name'], $result->fields['middle_name'], $result->fields['last_name']);	// }	/**	 * Return author email by ID	 */	function getAuthorEmailByAuthorId($authorId){		$primaryLocale = Locale::getPrimaryLocale();				$result = &$this->retrieve('SELECT email FROM authors WHERE 									author_id = ? ', 									array($authorId, $primaryLocale)									);				return $result->fields['email'];	}		/**	 * Returns an specific metadata from the authors settings table.	 */	function getAuthorMetadataByAuthorId($authorId, $metadata){		$primaryLocale = Locale::getPrimaryLocale();				$result = &$this->retrieve('SELECT setting_value FROM author_settings WHERE 									setting_name=? AND 									author_id = ? AND 									locale = ?', 									array($metadata, $authorId, $primaryLocale)									);				return $result->fields['setting_value'];		}		/**	 * Sets an specific metadata for authors setting.	 */	function setAuthorMetadata($authorId, $metadata, $value)	{		if(!$this->authorSettingExists($authorId, $metadata))			$this->insertAuthorMetadataByAuthorId($authorId, $metadata, $value);		else			$this->updateAuthorMetadataByAuthorId($authorId, $metadata, $value);	}			/**	 * Inserts an specific metadata for a given article.	 */	function insertAuthorMetadataByAuthorId($authorId, $metadata, $value) {		//var_dump($authorId);		//die();		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('INSERT INTO author_settings				(					author_id,					locale,					setting_name,					setting_value,					setting_type				)				VALUES 				(%s, \'%s\', \'%s\', \'%s\', \'%s\')',				$authorId,				$primaryLocale,				$metadata,				$value,				"string"			)	 	);	}		/**	 * updates an specific metadata on the settings table.	 */	 function updateAuthorMetadataByAuthorId($authorId, $metadata, $value) {		$primaryLocale = Locale::getPrimaryLocale();		$this->update(			sprintf('UPDATE author_settings SET 					 setting_value = \'%s\' WHERE 					 author_id = %s AND 					 setting_name=\'%s\' AND 					 locale=\'%s\'', 					 $value, 					 $authorId, 					 $metadata,					 $primaryLocale					)	 	);	}	/**	 * updates the article citations of the article database fields.	 */	function updateOjsArticleCitations($articleId, $citations){		$this->update(			sprintf('UPDATE articles SET 					 citations = \'%s\' WHERE 					 article_id = %s', 					 $citations, 					 $articleId					)	 	);	}	}?>