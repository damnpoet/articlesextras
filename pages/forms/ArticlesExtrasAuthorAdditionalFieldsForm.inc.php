<?phpimport('form.Form');import('file.ArticleFileManager');class ArticlesExtrasAuthorAdditionalFieldsForm extends Form {	/** @var $journalId int */	var $journalId;	/** @var $plugin object */	var $plugin;	/** $var $errors string */	var $errors;	var $article;	/**	 * Constructor         * @param $journalId int	 */	function ArticlesExtrasAuthorAdditionalFieldsForm(&$plugin, $journalId) {		parent::Form($plugin->getTemplatePath() . 'authorAdditionalFieldsForm.tpl');		$this->journalId = $journalId;		$this->plugin =& $plugin;	}        /**	 * Initialize form data from current group group.	 */	function initData( $args ) {		// figure out the current page 		$current = array_shift($args);		$this->setData('current', $current);		// article		$articleDao = &DAORegistry::getDAO('ArticleDAO');            		$article = &$articleDao->getArticle($current);		$this->article = $article;		//authors		$authors = $article->getAuthors();		$articlesExtrasDao = &DAORegistry::getDAO('ArticlesExtrasDAO');		//$body = $articlesExtrasDao->getArticleBody($current);		$articleExtrasDao = &DAORegistry::getDAO('ArticlesExtrasDAO');		// add the tiny MCE script 		//HookRegistry::register('TemplateManager::display',array(&$this, 'callback'));		$templateMgr = &TemplateManager::getManager();		$templateMgr->assign('current', $current );		//$templateMgr->assign('currentBody', $body);		//authors		$templateMgr->assign('authors', $authors);		//DAO... not shure about this...		$templateMgr->assign('articleExtrasDao', $articleExtrasDao);		//form locale		$templateMgr->assign('formLocale', $this->getDefaultFormLocale());		$citations = array();		$articleId = $article->getArticleId();		$akak = $articlesExtrasDao->getCitationsByArticleId($articleId);		$citations = unserialize($articlesExtrasDao->getCitationsByArticleId($articleId));		//var_dump($citations[0]);		//var_dump($akak);		//die();		// $plugin = &PluginRegistry::getPlugin('generic', ARTICLES_EXTRAS_PLUGIN_NAME);		// $plugin->import('classes.Citation');		// $citation = &new Citation($citations[0]);		// var_dump($citation.getCitation());		// die();			}	/**	 * Get the default form locale.	 * @return string	 */	function getDefaultFormLocale() {		if ($this->article) return $this->article->getLocale();		return parent::getDefaultFormLocale();	}	/**	 * Assign form data to user-submitted data.	 */	function readInputData() {		$this->readUserVars(array('articleBody', 'current'));	}	/**	 * Save page - write to database. 	 */	 	function save() {		$current = $this->getData('current');		$plugin =& $this->plugin;		//Article		$articleDao = &DAORegistry::getDAO('ArticleDAO');		$article = &$articleDao->getArticle($current);		//ArticlesExtras DAO		$articleExtrasDao = &DAORegistry::getDAO('ArticlesExtrasDAO');		//get authors data from form		$authorsData = $_POST['authorsData'];		//set authors extra metadata		foreach ($authorsData as $authorId => $authorData) {						foreach ($authorData as $dataKey => $data){				$articleExtrasDao->setAuthorMetadata($authorId, $dataKey, trim($data));			}		}		  //       	$current = $this->getData('current');				//$plugin =& $this->plugin;				//Article		//$articleDao = &DAORegistry::getDAO('PublishedArticleDAO');		//$article = &$articleDao->getPublishedArticleByArticleId($current, null, false);			// //Get body from form		// $body = mysql_real_escape_string($this->getData('articleBody'));		// //ArticlesExtras DAO		// $articleDao = &DAORegistry::getDAO('ArticlesExtrasDAO');		// //Set body  //               $articleDao->setArticleBody($article, $body);	}}?>