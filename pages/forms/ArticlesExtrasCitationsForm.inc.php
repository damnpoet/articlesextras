<?phpimport('form.Form');class ArticlesExtrasCitationsForm extends Form {	/** @var $journalId int */	var $journalId;	/** @var $plugin object */	var $plugin;	/** $var $errors string */	var $errors;		/** $var $citationParts serial */	var $citationParts;	/**	 * Constructor	 * @param $journalId int	 */	function ArticlesExtrasCitationsForm(&$plugin, $journalId) {		parent::Form($plugin->getTemplatePath() . 'citationsForm.tpl');		$this->journalId = $journalId;		$this->plugin =& $plugin;	}	/*	 * Check and fix content as necessary.	 * $content string - submitted content	 * 	 * return true in all cases so that no error message from the FormValidatorCustom is showen	 * but since addError is set in some cases, the FormValidatorCustom will still fail on validate	 */	function checkAndFixContent ( $body ) {		$this->setData('body', $body);		return true;	}	/**	 * Initialize form data from current group.         * @param $args array	 */	function initData( $args ) {		// figure out the current page 		$current = array_shift($args);		$this->setData('current', $current);		$plugin =& $this->plugin;				$articlesExtrasDao = &DAORegistry::getDAO('ArticlesExtrasDAO');		$templateMgr = &TemplateManager::getManager();		$templateMgr->assign('current', $current );				$journal = Request::getJournal();		$locales = $journal->getSupportedLocaleNames();		$templateMgr->assign('locales', $locales);						$articleDao = &DAORegistry::getDAO('PublishedArticleDAO');		$article = &$articleDao->getPublishedArticleByArticleId($current, null, false);                		$templateMgr->assign_by_ref('article', $article);	}		/**	 * Assign form data to user-submitted data.	 */	function readInputData() {		$this->readUserVars(array('citations', 'current'));	}}?>